@page "/courses/delete" 
@inject NavigationManager NavigationManager 

<PageTitle>Delete</PageTitle>

<PageHead Title="Delete Course" BackLink="/courses" />

<p>Are you sure you want to delete this?</p> 
<div> 
    @if (course is null) 
    { 
        <p><em>Loading...</em></p> 
    } 
    else 
    { 
        <dl class="row"> 
            <dt class="col-sm-2">Course Name</dt> 
            <dd class="col-sm-10">@course.CourseName</dd> 
        </dl> 
        <dl class="row"> 
            <dt class="col-sm-2">Course Code</dt> 
            <dd class="col-sm-10">@course.CourseCode</dd> 
        </dl> 
        <dl class="row"> 
            <dt class="col-sm-2">CreatedBy</dt> 
            <dd class="col-sm-10">@course.CreatedBy</dd> 
        </dl> 
        <dl class="row"> 
            <dt class="col-sm-2">CreatedAt</dt> 
            <dd class="col-sm-10">@course.CreatedAt</dd> 
        </dl> 
        <dl class="row"> 
            <dt class="col-sm-2">UpdatedBy</dt> 
            <dd class="col-sm-10">@course.UpdatedBy</dd> 
        </dl> 
        <dl class="row"> 
            <dt class="col-sm-2">UpdatedAt</dt> 
            <dd class="col-sm-10">@course.UpdatedAt</dd> 
        </dl> 
        <EditForm method="post" Model="course" OnValidSubmit="DeleteDepartment" FormName="delete" Enhance> 
            <button type="submit" class="btn btn-danger" disabled="@(course is null)">Delete</button>
        </EditForm> 
    } 
</div> 

@code { 
    private Course? course; 

    [SupplyParameterFromQuery] 
    private int Id{ get; set; }
    protected override async Task OnInitializedAsync() 
    { 

        course = await CourseRepository.GetById(Id); 

        if (course is null) 
        { 
            NavigationManager.NavigateTo("notfound"); 
        } 
    } 

    private async Task DeleteDepartment() 
    { 
        if (course != null) 
        { 
            var isDeleted = await CourseRepository.Delete(course.Id); 
            if (isDeleted) 
            { 
                NavigationManager.NavigateTo("/courses"); 
            } 
        } 
    } 
} 
