 @page "/academicyear/edit"
 @inject NavigationManager NavigationManager
 @rendermode InteractiveServer

<PageTitle>Edit</PageTitle>

<PageHead Title="Edit Academic Year" BackLink="academicyear" />


@if (AcademicPeriod is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@AcademicPeriod" OnValidSubmit="UpdateAcademic" FormName="EditAcademicYear">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="academicPeriod" class="form-label">Academic Period</label>
                    <InputText id="academicPeriod" class="form-control" @bind-Value="AcademicPeriod.Period" />
                    <ValidationMessage For="() => AcademicPeriod.Period" />
                </div>

                <div class="mb-3">
                    <label for="academicYear" class="form-label">Academic Year</label>
                    <InputText id="academicYear" class="form-control" @bind-Value="AcademicPeriod.AcademicYear" />
                    <ValidationMessage For="() => AcademicPeriod.AcademicYear" />
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>
        </div>
    </div>
}



@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int Id { get; set; }

    private AcademicPeriod? AcademicPeriod { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AcademicPeriod = await AcademicRepository.GetById(Id);

        if (AcademicPeriod is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdateAcademic()
    {
        try
        {
            await AcademicRepository.Update(AcademicPeriod!);
            NavigationManager.NavigateTo("/academicyear");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error updating department: {ex.Message}");
        }
    }
 }
