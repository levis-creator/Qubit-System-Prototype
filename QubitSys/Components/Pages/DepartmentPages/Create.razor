@* @page "/departments/create" *@
@* @inject NavigationManager NavigationManager *@
@* @inject ILogger<Create> Logger *@
@* @rendermode InteractiveServer *@

@* <PageTitle>Create</PageTitle> *@

@* <h1>Create</h1> *@

@* <h2>Department</h2> *@
@* <hr /> *@

@* <div class="row"> *@
@*     <div class="col-md-4"> *@
@*         <EditForm Model="@Department" OnValidSubmit="@AddDepartment" FormName="create"> *@
@*             <DataAnnotationsValidator /> *@
@*             <ValidationSummary class="text-danger" role="alert" /> *@

@*             <div class="mb-3"> *@
@*                 <label for="departmentname" class="form-label">Department Name:</label> *@
@*                 <InputText id="departmentname" @bind-Value="Department.DepartmentName" class="form-control" /> *@
@*                 <ValidationMessage For="() => Department.DepartmentName" class="text-danger" /> *@
@*             </div> *@

@*             <div class="mb-3"> *@
@*                 <label for="departmentcode" class="form-label">Department Code:</label> *@
@*                 <InputText id="departmentcode" @bind-Value="Department.DepartmentCode" class="form-control" /> *@
@*                 <ValidationMessage For="() => Department.DepartmentCode" class="text-danger" /> *@
@*             </div> *@

@*             <button type="submit" class="btn btn-primary">Create</button> *@
@*         </EditForm> *@
@*     </div> *@
@* </div> *@

@* <div> *@
@*     <a href="/departments">Back to List</a> *@
@* </div> *@

@* @code { *@
@*     private Department Department { get; set; } = new Department(); *@

@*     private async Task AddDepartment() *@
@*     { *@
@*         Logger.LogInformation(Newtonsoft.Json.JsonConvert.SerializeObject(Department)); *@
@*         await DepartmentRepository.Add(Department); *@
@*         NavigationManager.NavigateTo("/departments"); *@
@*     } *@

   
@* } *@
