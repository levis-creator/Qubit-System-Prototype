@* @page "/departments/delete" *@
@* @inject NavigationManager NavigationManager *@

@* <PageTitle>Delete</PageTitle> *@

@* <h1>Delete</h1> *@

@* <p>Are you sure you want to delete this?</p> *@
@* <div> *@
@*     <h2>Department</h2> *@
@*     <hr /> *@
@*     @if (department is null) *@
@*     { *@
@*         <p><em>Loading...</em></p> *@
@*     } *@
@*     else *@
@*     { *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">DepartmentName</dt> *@
@*             <dd class="col-sm-10">@department.DepartmentName</dd> *@
@*         </dl> *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">DepartmentCode</dt> *@
@*             <dd class="col-sm-10">@department.DepartmentCode</dd> *@
@*         </dl> *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">CreatedBy</dt> *@
@*             <dd class="col-sm-10">@department.CreatedBy</dd> *@
@*         </dl> *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">CreatedAt</dt> *@
@*             <dd class="col-sm-10">@department.CreatedAt</dd> *@
@*         </dl> *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">UpdatedBy</dt> *@
@*             <dd class="col-sm-10">@department.UpdatedBy</dd> *@
@*         </dl> *@
@*         <dl class="row"> *@
@*             <dt class="col-sm-2">UpdatedAt</dt> *@
@*             <dd class="col-sm-10">@department.UpdatedAt</dd> *@
@*         </dl> *@
@*         <EditForm method="post" Model="department" OnValidSubmit="DeleteDepartment" FormName="delete" Enhance> *@
@*             <button type="submit" class="btn btn-danger" disabled="@(department is null)">Delete</button> | *@
@*             <a href="/departments">Back to List</a> *@
@*         </EditForm> *@
@*     } *@
@* </div> *@

@* @code { *@
@*     private Department? department; *@

@*     [SupplyParameterFromQuery] *@
@*     private int Id { get; set; } *@

@*     protected override async Task OnInitializedAsync() *@
@*     { *@

@*         department = await DepartmentRepository.GetById(Id); *@

@*         if (department is null) *@
@*         { *@
@*             NavigationManager.NavigateTo("notfound"); *@
@*         } *@
@*     } *@

@*     private async Task DeleteDepartment() *@
@*     { *@
@*         if (department != null) *@
@*         { *@
@*             var isDeleted = await DepartmentRepository.Delete(department.Id); *@
@*             if (isDeleted) *@
@*             { *@
@*                 NavigationManager.NavigateTo("/departments"); *@
@*             } *@
@*         } *@
@*     } *@
@* } *@
